#!@CMAKE_COMMAND@ -P
#
# Copyright © 2014 Felix Höfling
#
# This file is part of HALMD.
#
# HALMD is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

##
# Test computation of thermodynamic properties for a simple, one-component
# Lennard-Jones fluid

set(CMAKE_MODULE_PATH "@HALMD_TEST_CMAKE_BINARY_DIR@")

include(execute_halmd)

set(OUTPUT_PREFIX "@CMAKE_CURRENT_BINARY_DIR@/thermodynamics")
set(HALMD_WITH_GPU @HALMD_WITH_GPU@)

if(USE_GPU EQUAL 0)
  if(HALMD_WITH_GPU)
    set(BACKEND_OPTION "--disable-gpu")
  endif()
  set(PARTICLES "1500")
  message(STATUS "Using host backend with ${PARTICLES} particles")
elseif(USE_GPU EQUAL 1)
  set(PARTICLES "4000")
  message(STATUS "Using GPU backend with ${PARTICLES} particles")
else()
  message(FATAL_ERROR "Variable USE_GPU neither set to 0 nor 1")
endif()

if(NOT DEFINED DIMENSION)
  message(FATAL_ERROR "Variable DIMENSION undefined")
else()
  message(STATUS "Space dimension: ${DIMENSION}")
endif()

# aspect ratios of simulation box
if(DIMENSION EQUAL 3)
  set(ASPECT_RATIOS "1,2,1.01")
else()
  set(ASPECT_RATIOS "1,2")
endif()

# sampling intervals, use relaxation times from VACF
# and assume integration time step Δt=0.001
if(DIMENSION EQUAL 3)
  set(INTERVAL 320)
else()
  set(INTERVAL 450)
endif()

#
# prepare system: thermalisation over 30τ (LJ time units) with larger Δt=0.005,
#
execute_halmd(
  "${BACKEND_OPTION}"
  "@CMAKE_SOURCE_DIR@/examples/liquid/lennard_jones_equilibration.lua"
  --verbose
  --output "${OUTPUT_PREFIX}_thermalisation"
  --particles ${PARTICLES}
  --ratios ${ASPECT_RATIOS}
  --cutoff 4
  --density 0.3
  --temperature 3
  --rate 1
  --timestep 0.005
  --time 30
)

#
# internal energy obtained from manual thermalisation runs over 1000τ
#
if(DIMENSION EQUAL 3)
  set(E_INT 2.8282)
else()
  set(E_INT 2.4103)
endif()

#
# NVE equilibration over another 30τ with Δt=0.001
#
execute_halmd(
  "${BACKEND_OPTION}"
  "@CMAKE_SOURCE_DIR@/examples/liquid/lennard_jones.lua"
  --verbose
  --output "${OUTPUT_PREFIX}_equilibration"
  --input "${OUTPUT_PREFIX}_thermalisation.h5"
  --cutoff 4
  --timestep 0.001
  --time 30
  --sampling state-vars=${INTERVAL} structure=0 correlation=0
  --rescale-to-energy=${E_INT}
)

# FIXME rescale velocities from temperature of second half of NVE equilibration run
#
# NVE production run over 60τ with Δt=0.001
#
execute_halmd(
  "${BACKEND_OPTION}"
  "@CMAKE_SOURCE_DIR@/examples/liquid/lennard_jones.lua"
  --verbose
  --output "${OUTPUT_PREFIX}"
  --input "${OUTPUT_PREFIX}_equilibration.h5"
  --cutoff 4
  --time 60
  --timestep 0.001
  --sampling state-vars=${INTERVAL} structure=0 correlation=0
)

execute_process(
  COMMAND "@CMAKE_CURRENT_BINARY_DIR@/test_integration_validation_thermodynamics"
    --log_level=test_suite
    "${OUTPUT_PREFIX}.h5"
    ${USE_GPU}
  WORKING_DIRECTORY "@CMAKE_CURRENT_BINARY_DIR@"
  RESULT_VARIABLE ${OUTPUT_PREFIX}_STATUS
)
if(NOT ${OUTPUT_PREFIX}_STATUS STREQUAL "0")
  message(SEND_ERROR "validation of thermodynamic properties failed")
endif()

file(REMOVE
  "${OUTPUT_PREFIX}_thermalisation.log"
  "${OUTPUT_PREFIX}_thermalisation.h5"
  "${OUTPUT_PREFIX}_equilibration.log"
  "${OUTPUT_PREFIX}_equilibration.h5"
  "${OUTPUT_PREFIX}.log"
  "${OUTPUT_PREFIX}.h5"
)
