#!@CMAKE_COMMAND@ -P
#
# Copyright © 2011-2013 Felix Höfling
# Copyright © 2011-2012 Peter Colberg
#
# This file is part of HALMD.
#
# HALMD is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

##
# Test simulation of mixture using two particle instances
#

set(CMAKE_MODULE_PATH "@HALMD_TEST_CMAKE_BINARY_DIR@")

include(execute_halmd)

set(OUTPUT_PREFIX "@CMAKE_CURRENT_BINARY_DIR@/two_particles")
set(HALMD_WITH_GPU @HALMD_WITH_GPU@)

if(DEFINED USE_HOST)
  if(HALMD_WITH_GPU)
    set(BACKEND_OPTION "--disable-gpu")
  endif()
  message(STATUS "Using host backend")
else()
  message(STATUS "Using GPU backend")
endif()

if(NOT DEFINED DIMENSION)
  message(FATAL_ERROR "Variable DIMENSION undefined")
else()
  message(STATUS "Space dimension: ${DIMENSION}")
endif()

# prepare system state
execute_halmd(
  "${BACKEND_OPTION}"
  "@CMAKE_SOURCE_DIR@/test/integration/modularity/two_particles_equilibration.lua"
  --verbose
  --output "${OUTPUT_PREFIX}"
  --dimension "${DIMENSION}"
  --particles 300,1
  --time 0.1
  --sampling trajectory=50
)

execute_halmd(
  "${BACKEND_OPTION}"
  "@CMAKE_SOURCE_DIR@/test/integration/modularity/two_particles.lua"
  --verbose
  --output "${OUTPUT_PREFIX}_continued"
  --input "${OUTPUT_PREFIX}.h5"
  --time 0.1
  --sampling trajectory=100 state-vars=19 correlation=7
)

# FIXME add specific checks of the result
message(AUTHOR_WARNING "final checks not yet implemented")

file(REMOVE
  "${OUTPUT_PREFIX}.h5"
  "${OUTPUT_PREFIX}.log"
  "${OUTPUT_PREFIX}_continued.log"
  "${OUTPUT_PREFIX}_continued.h5"
)
